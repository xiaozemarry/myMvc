<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>myMvc</display-name>
	<welcome-file-list>
		<welcome-file>login\blueBack\page\index.jsp</welcome-file>
	</welcome-file-list>
	<servlet-mapping>
	<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.map</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.icon</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	    <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpeg</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>-1</session-timeout>
	</session-config>
	<!--自定义rsponseWapper
	<filter>
	   <filter-name>responseWapper</filter-name>
	   <filter-class>context.wapper.MyHttpServletResponseWapperFilter</filter-class>
	</filter>
	<filter-mapping>
	  <filter-name>responseWapper</filter-name>
	  <url-pattern>*.html</url-pattern>
	</filter-mapping>
		<filter-mapping>
	  <filter-name>responseWapper</filter-name>
	  <url-pattern>*.jsp</url-pattern>
	</filter-mapping>-->
	<!-- 配置spring bean scope = 'request' Servlet 2.4
	 如果 Servlet 2.4-
	  <filter> 
	    <filter-name>requestContextFilter</filter-name> 
	    <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
	 </filter> 
	 <filter-mapping> 
	    <filter-name>requestContextFilter</filter-name> 
	    <url-pattern>/*</url-pattern>
	 </filter-mapping>
	 -->
  <listener>
	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
	<!--编码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--编码 -->
	<!--配置错误页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/page404/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
	<!--配置错误页面 -->
	<!-- Spring的做法是使用一个Servlet Listener， 在Web Container启动时把ROOT的绝对路径写到系统变量里， 
		这样log4j的配置文件里就可以用${myAppfuse.root}来表示刚刚设进去的 系统变量：log4j.appender.logfile.File=${myAppfuse.root}/logs/mylog.log 
		<context-param> <param-name>webAppRootKey</param-name> <param-value>myappfuse.root</param-value> 
		</context-param> -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/Config/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!--程序初始化 -->
	<listener>
		<listener-class>context.ContextStart</listener-class>
	</listener>
	<filter>
		<filter-name>contextFilter</filter-name>
		<filter-class>context.ContextFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>contextFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 
	<filter-mapping>
		<filter-name>contextFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>contextFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping> -->

	<!--连接池管理界面 -->
	<servlet>
		<servlet-name>proxool</servlet-name>
		<servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>proxool</servlet-name>
		<url-pattern>/proxool</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>mySpringServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>mySpringServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- druid connection pool start -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<init-param>
			<!-- 配置 Druid 监控信息显示页面 -->
			<!-- 允许清空统计数据 -->
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 用户名 -->
			<param-name>loginUsername</param-name>
			<param-value>admin</param-value>
		</init-param>
		<init-param>
			<!-- 密码 -->
			<param-name>loginPassword</param-name>
			<param-value>admin</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	<!-- druid connection pool end -->
</web-app>