<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        classpath:../spring-xsd/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        classpath:../spring-xsd/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        classpath:../spring-xsd/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx 
		classpath:../spring-xsd/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop 
        classpath:../spring-xsd/spring-aop-3.2.xsd
        ">
	<!-- druid connection pool config start -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="jdbc:oracle:thin:@10.246.146.38:1521/ipms" />
		<property name="username" value="thd2" />
		<property name="password" value="thd2" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x' from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="50" />
 		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" /> 
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" /> 
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat,wall,mergeStat,log4j" />
		<!--  合并多个DruidDataSource的监控数据  -->
		<property name="useGlobalDataSourceStat" value="true" />
		<!-- 配置log4j -->
	    <property name="proxyFilters">
	        <list>
	            <ref bean="log-filter"/>
        	</list>
    	</property>
	</bean>
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <!--
	     mergeSql
	        select * from t where id = 1
			select * from t where id = 2
			select * from t where id = 3
		  then
			select * from t where id = ?
	      -->
		<property name="mergeSql" value="true" />
		<property name="logSlowSql" value="true" />
		<!-- 执行时间大于2s的均为慢sql -->
		<property name="slowSqlMillis" value="2000" />
	</bean>
	
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<!-- 
		dataSourceLogEnabled		所有DataSource相关的日志
		connectionLogEnabled		所有连接相关的日志
		connectionLogErrorEnabled	所有连接上发生异常的日志
		statementLogEnabled			所有Statement相关的日志
		statementLogErrorEnabled	所有Statement发生异常的日志
		 -->
    	<property name="statementLogEnabled" value="false" />
    	<property name="dataSourceLogEnabled" value="false" />
    	<property name="connectionLogEnabled" value="false" />
    	<property name="resultSetLogEnabled" value="false" />
    	<property name="statementLogErrorEnabled" value="false" />
    	<property name="connectionLogErrorEnabled" value="false" />
    	
	</bean>
	
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.mycompany.service.*</value>
				<value>com.mycompany.dao.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	<!-- 有些情况下，可能你需要配置proxy-target-class，例如： <aop:config proxy-target-class="true"> 
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" 
		/> </aop:config> -->
	<!-- druid connection pool config end -->
</beans>